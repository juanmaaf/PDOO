/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import civitas.CivitasJuego;
import civitas.Diario;
import civitas.Jugador;
import civitas.OperacionInmobiliaria;
import civitas.OperacionJuego;
import controladorCivitas.Respuesta;
import java.util.ArrayList;

import javax.swing.JOptionPane;

/**
 *
 * @author juanmaaf
 */
public class CivitasView extends javax.swing.JFrame implements Vista{

    private CivitasJuego juego;
    /**
     * Creates new form CivitasView
     */
    public CivitasView() {
        initComponents();
    }
    
    public void setCivitasJuego(CivitasJuego j){
        juego = j;
        setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        jugadorPanel1 = new GUI.JugadorPanel();
        jLabelCasilla = new javax.swing.JLabel();
        casillaActual = new javax.swing.JTextField();
        jLabelOp = new javax.swing.JLabel();
        siguienteOp = new javax.swing.JTextField();
        jLabelRanking = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ranking = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titulo.setText("Juego CIVITAS");

        jLabelCasilla.setText("Casilla Actual");

        casillaActual.setEditable(false);
        casillaActual.setText("infoCasilla");

        jLabelOp.setText("Siguiente Operación");

        siguienteOp.setEditable(false);
        siguienteOp.setText("siguienteOp");

        jLabelRanking.setText("Ranking");

        ranking.setEditable(false);
        ranking.setColumns(20);
        ranking.setRows(5);
        ranking.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(ranking);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelOp)
                            .addComponent(jLabelCasilla))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(siguienteOp, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 571, Short.MAX_VALUE))
                            .addComponent(casillaActual)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelRanking)
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(titulo))
                    .addComponent(jugadorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(titulo)
                .addGap(18, 18, 18)
                .addComponent(jugadorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCasilla)
                    .addComponent(casillaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOp)
                    .addComponent(siguienteOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRanking)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(262, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField casillaActual;
    private javax.swing.JLabel jLabelCasilla;
    private javax.swing.JLabel jLabelOp;
    private javax.swing.JLabel jLabelRanking;
    private javax.swing.JScrollPane jScrollPane1;
    private GUI.JugadorPanel jugadorPanel1;
    private javax.swing.JTextArea ranking;
    private javax.swing.JTextField siguienteOp;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualiza() {
       jLabelRanking.setVisible(false);
       ranking.setVisible(false);
       
       jugadorPanel1.setJugador(juego.getJugadorActual());
       casillaActual.setText(juego.getTablero().getCasilla(juego.getJugadorActual().getCasillaActual()).toString());
       if(juego.finalDelJuego()){
           ArrayList<Jugador> rank = juego.ranking();
           String text = "";
           for(int i = rank.size()-1; i >= 0; i--){
              text += ("Nombre del Jugador: " +rank.get(i).getNombre() +"    Saldo: " +rank.get(i).getSaldo() +"\n");
           }
           ranking.setText(text);
           
           jLabelRanking.setVisible(true);
           ranking.setVisible(true);
       }
       repaint();
       revalidate();
    }

    @Override
    public void pausa() {
        int val= JOptionPane.showConfirmDialog(null, "¿Continuar?", "Siguiente paso", JOptionPane.YES_NO_OPTION);
            if (val==1) System.exit(0);
    }

    @Override
    public Respuesta comprar() {
        int opcion= 1-JOptionPane.showConfirmDialog(null, "¿Quieres comprar la calle actual?", "Compra", JOptionPane.YES_NO_OPTION);
        if(opcion == 0){
            return Respuesta.NO;
        }
        else{
            return Respuesta.SI;
        }
    }

    @Override
    public OperacionInmobiliaria elegirOperacion() {
        GestionarDialog gestion = new GestionarDialog(this);
        int index = gestion.getGestionElegida();
        return OperacionInmobiliaria.values()[index];
    }

    @Override
    public int elegirPropiedad() {
        PropiedadDialog propiedad = new PropiedadDialog(this, juego.getJugadorActual());
        return propiedad.getPropiedadElegida();
    }

    @Override
    public void mostrarSiguienteOperacion(OperacionJuego operacion) {
        siguienteOp.setText(operacion.toString());
        if(operacion == OperacionJuego.AVANZAR){
            Dado.createInstance(this);
        }
        repaint();
    }

    @Override
    public void mostrarEventos() {
        if (!Diario.getInstance().getEventos().isEmpty()){
            DiarioDialog diarioD = new DiarioDialog(this); //crea la ventana del diario
        }
        repaint();
    }
}
